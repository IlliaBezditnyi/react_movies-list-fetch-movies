{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovies","endpoint","a","fetch","response","json","FindMovie","addMovie","useState","setMovie","query","setQuery","error","setError","onFindMovie","useCallback","trim","finded","value","Response","onAddMovie","event","preventDefault","onSubmit","htmlFor","type","id","placeholder","onChange","target","onClick","App","setMovies","newMovie","some","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a6377e0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=';\nconst KEY = '9d4d899a';\n\nexport const getMovies = async (endpoint: string) => {\n  const response = await fetch(`${URL}${KEY}&t=${endpoint}`);\n\n  return response.json();\n};\n","import React, { useState, useCallback, FormEvent } from 'react';\nimport { getMovies } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState('');\n\n  const onFindMovie = useCallback(() => {\n    if (!query.trim()) {\n      setError('Invalid input');\n    } else {\n      const finded = async () => {\n        const value = await getMovies(query);\n\n        if (value.Response === 'True') {\n          setMovie(value);\n          setError('');\n        } else {\n          setError(\"Can't find such movie\");\n        }\n      };\n\n      finded();\n    }\n  }, [query]);\n\n  const onAddMovie = useCallback((event: FormEvent) => {\n    event.preventDefault();\n\n    if (!error && movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  }, [movie, error]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onAddMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              {error}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    const filteredMovies = movies\n      .some(movie => movie.imdbID === newMovie.imdbID);\n\n    if (filteredMovies) {\n      alert('This movie has already been added to the list');\n    } else {\n      setMovies([...movies, newMovie]);\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}